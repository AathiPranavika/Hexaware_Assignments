
1. Select all open incidents. 
select * from crime where status="open";

2. Find the total number of incidents. 
select count(*) as total_incidents from crime;

3. List all unique incident types. 
select distinct IncidentType from crime;

4. Retrieve incidents that occurred between '2023-09-01' and '2023-09-10'. 
select * from crime where incidentDate between '2023-09-01' and '2023-09-10';

5. List persons involved in incidents in descending order of age. 
 -- no age column
alter table suspect add age int;
alter table victim add age int;

update victim set age = 45 where victimid = 1;
update victim set age = 30 where victimid = 2;
update victim set age = 25 where victimid = 3;
update suspect set age = 40 where suspectid = 1;
update suspect set age = null where suspectid = 2; 
update suspect set age = 35 where suspectid = 3;

select name,age,'victim' from victim as role union 
select name,age,'suspect' from suspect order by age desc;

6. Find the average age of persons involved in incidents. 
select round(avg(age),2) as average_age from (select age from victim union all 
select age from suspect) as subquery; 

7. List incident types and their counts, only for open cases. 
select incidentType, count(*) from crime where status="open" group by incidentType;

8. Find persons with names containing 'Doe'. 
select * from victim where name like "%doe%" union
select * from suspect where name like "%doe%";


9. Retrieve the names of persons involved in open cases and closed cases. 
select v.name,c.status from victim v join crime c on v.crimeid=c.crimeid union
select s.name,c.status from suspect s join crime c on s.crimeid=c.crimeid;

10. List incident types where there are persons aged 30 or 35 involved. 
select distinct c.incidenttype from crime c join victim v on c.crimeid = v.crimeid
where v.age in (30, 35) union
select distinct c.incidenttype from crime c join suspect s on c.crimeid = s.crimeid
where s.age in (30, 35);

11. Find persons involved in incidents of the same type as 'Robbery'. 
select name from victim where crimeid in (select crimeid from crime where incidenttype = 'robbery')  
union  
select name from suspect where crimeid in (select crimeid from crime where incidenttype = 'robbery');  

12. List incident types with more than one open case. 
select incidentType from crime where status="open" group by incidentType
having count(incidentType)>1;

13. List all incidents with suspects whose names also appear as victims in other incidents. 
select c.* from crime c  
join suspect s on c.crimeid = s.crimeid  
where s.name in (select name from victim);


14.  Retrieve all incidents along with victim and suspect details. 
select c.*, v.name as victim_name, s.name as suspect_name from crime c  
left join victim v on c.crimeid = v.crimeid  
left join suspect s on c.crimeid = s.crimeid;  

15. Find incidents where the suspect is older than any victim. 
select c.*  from crime c join suspect s on c.crimeid = s.crimeid  
where s.age > any (select v.age from victim v where v.crimeid = c.crimeid);  

16. Find suspects involved in multiple incidents: 
select name, count(*) as incident_count  from suspect 
group by name  having count(*) > 1;  

17. List incidents with no suspects involved. 
select *  from crime  
where crimeid in (select crimeid from suspect where name = 'unknown');  

18. List all cases where at least one incident is of type 'Homicide' and all other incidents are of type 
'Robbery'. 
select * from crime  
where incidenttype = 'homicide' or incidenttype = 'robbery';

19. Retrieve a list of all incidents and the associated suspects, showing suspects for each incident, or 
'No Suspect' if there are none. 
select c.crimeid, c.incidenttype, coalesce(s.name, 'no suspect') as suspect_name  
from crime c  
left join suspect s on c.crimeid = s.crimeid;

20. List all suspects who have been involved in incidents with incident types 'Robbery' or 'Assault' 
select * from suspect  
where crimeid in (select crimeid from crime where incidentType in ('robbery', 'assault'));







